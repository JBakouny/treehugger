---
out: new.html
---

Instance Creation Expressions
-----------------------------

### Constructor invocations

Instance creations are written using `NEW(path|typ|"C")`:

```console:new
scala> import treehugger.forest._, definitions._, treehuggerDSL._
scala> object sym {
  val A = RootClass.newClass("A")
}
scala> NEW(sym.A)                   // new A
scala> NEW("C")                     // new C
scala> NEW(REF("B") DOT "C")        // new B.C
```

Optionally, arguments may be passed into the constructor using `NEW(path|typ|"C", arg, ...)`:

```console
scala> val tree = NEW("C", LIT(0), LIT(1))
scala> treeToString(tree)
```

### Anonymous classes

Anonymous classes are created by passing `ANONDEF(parent|"C", ...)` into `NEW(...)`:

```console
scala> val tree2 = NEW(ANONDEF() := BLOCK(
  DEF("name") := LIT("Robert")
))
scala> val tree3 = NEW(ANONDEF("C") := BLOCK(
  DEF("name") := LIT("Robert")
))
scala> val tree4 = NEW(ANONDEF("C") withEarlyDefs(
  VAL("name") := LIT("Robert")
))
```

These examples print as:

```console
scala> treeToString(tree2)
scala> treeToString(tree3)
scala> treeToString(tree4)
```
