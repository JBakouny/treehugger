---
out: pattern_matching.html
---

Pattern Matching
----------------

Pattern matching is written using `tree MATCH(CASE(...), ...)`:

```console:new
scala> import treehugger.forest._, definitions._, treehuggerDSL._
scala> val tree = (DEF("maxList", "A")
    withTypeParams(TYPEVAR("T") VIEWBOUNDS TYPE_ORDERED("A"))
    withParams(PARAM("elements", TYPE_LIST("A")))) :=
  REF("elements") MATCH (
    CASE(ListClass UNAPPLY()) ==>
      THROW(IllegalArgumentExceptionClass, "empty list!"),
    CASE(ListClass UNAPPLY(ID("x"))) ==> REF("x"),
    CASE(ID("x") UNLIST_:: ID("rest")) ==> BLOCK(
      VAL("maxRest") := REF("maxList") APPLY(REF("rest")),
      IF(REF("x") INT_> REF("maxRest")) THEN REF("x")
      ELSE REF("maxRest") 
    )
  )
scala> treeToString(tree)
```
